# This is a basic workflow to help you get started with Actions

name: Tokenise environment variables

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  TSServerToken : "xTSSERVERx"
  SQLInstanceToken : "xSQLINSTANCEx"
  SQLUserToken : "xSQLUSERx"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # De-reference any environment specific variables
  dereference:
    runs-on: ubuntu-latest
    environment: DEREFERENCE
    permissions:
      contents: write
    steps:
          
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: show env variable
        run: echo TSServer token, ${{env.TSServerToken}}
        
      - name: show DEREFERENCE TSSERVER
        run: echo TSServer value, ${{ vars.TSSERVER}}
        
      - name: Find and Replace TSSERVER in Rules
        uses: jacobtomlinson/gha-find-replace@3.0.5
        with:
          find: "${{vars.TSSERVER}}"
          replace: "${{env.TSServerToken}}"
          include: "Rules/**"
          regex: true    
          
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
  
  # Create the various releases
  call-create-release-DEV:
    needs: dereference
    # Call the reusable workflow
    uses: AlexXeno/TestConfig/.github/workflows/CreateRelease.yml@main
    with:
      environment: DEV
      # apparently there is a bug in re-usable workflows that stop variables from working
      TSServerToken: "xTSSERVERx"
      SQLInstanceToken: "xSQLINSTANCEx"
      SQLUserToken: "xSQLUSERx"
      

