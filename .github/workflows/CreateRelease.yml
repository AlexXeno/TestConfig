# This is a basic workflow to help you get started with Actions

name: Create Release

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Allows the workflow to be called from another workflow
  workflow_call:
    inputs:
      environment: 
        description: 'Environment to run the release for'
        required: true
        type: string
      TSServerToken: 
        description: 'TSServer Token to replace with target environment value'
        required: true
        type: string        
      SQLInstanceToken: 
        description: 'SQLInstance Token to replace with target environment value'
        required: true
        type: string    
      SQLUserToken: 
        description: 'SQLUser Token to replace with target environment value'
        required: true
        type: string
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Output the various variables 
      - name: Run a multi-line script
        run: 
          echo "Building Environment, ${{inputs.environment}}" 
          echo "Target TSServer, ${{ vars.TSSERVER}}"         
          echo "TSServer Token, ${{ inputs.TSServerToken}}"          
          echo "SQLInstance Token, ${{ inputs.SQLInstanceToken}}"          
          echo "SQLUser Token, ${{ inputs.SQLUserToken}}"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Find and Replace ${{ inputs.TSServerToken}} in Rules
        uses: jacobtomlinson/gha-find-replace@3.0.5
        with:
          find: "${{ inputs.TSServerToken}}"
          replace: "${{ vars.TSSERVER}}"
          include: "Rules/**"
          regex: true    

      - name: Create Config Release
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'Releases/Release_${{inputs.environment}}.zip'
          exclusions: '*.git* *.md /Releases'

      - name: Upload Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: 'Releases/Release_${{inputs.environment}}.zip'
          tag: "NewTag1"

